Parent.pom:
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.3.RELEASE</version>
		<relativePath/>
	</parent>
		 
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Finchley.RELEASE</spring-cloud.version>
	</properties>
		 
	<dependencies>
		  
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		    
		<dependency>
			<groupId>cn.hutool</groupId>
			<artifactId>hutool-all</artifactId>
			<version>4.3.1</version>
		</dependency>
		    
	</dependencies>
		 
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
		        <scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

Eureka.pom:
	<dependencies>
		
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
		</dependency>
				
	</dependencies>
	
Eureka.application:
	server:
		port: 8761
		
	spring:
		application:
		name: eureka-server
		
	eureka:
		instance:
			hostname: 127.0.0.1
		client:
		    registerWithEureka: false
		    fetchRegister: false
		    serviceUrl:
		      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
		      
Eureka.run:
	@SpringBootApplication
	@EnableEurekaServer
	
Zuul.pom:
	<dependencies>
 	
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
 	
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
  
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-zuul</artifactId>
        </dependency>
 
    </dependencies>
    
Zuul.application:
	server:
	  port: 8080
	
	spring:
	  application:
	    name: zuul-server
	    
	eureka:
	  client:
	    serviceUrl:
	      defaultZone: http://127.0.0.1:8761/eureka/
	
	zuul:
	  routes:
	    api-a:
	      path: /xx/**
	      serviceId: xxxx
	      
Zuul.run:
	@SpringBootApplication
	@EnableEurekaClient
	@EnableZuulProxy
	@EnableDiscoveryClient
	
	
Mysql.pom:
	<dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        
         <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
 
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency> 
      
	</dependencies>

Mysql.application:
	server:
	  port: XXXX
	  
	spring:
	  application:
	    name: XXXX
	  datasource:
	    url: jdbc:mysql://127.0.0.1:3306/XXX?characterEncoding=UTF-8
	    username: root
	    password: 123456
	    driver-class-name: com.mysql.jdbc.Driver
	  jpa:
	    properties:
	      hibernate:
	        hbm2ddl:
	          auto: update
	
	eureka:
	  client:
	    serviceUrl:
	      defaultZone: http://127.0.0.1:8761/eureka/

Mysql.run:
	@SpringBootApplication
	@EnableEurekaClient
	
Feign+Hystrix.pom:
	<dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
        </dependency>
        
    </dependencies> 

Feign+Hystrix.application:
	server:
	  port: XXXX
	  
	eureka:
	  client:
	    serviceUrl:
	      defaultZone: http://127.0.0.1:8761/eureka/
	      
	spring:
	  application: 
	    name: XXXX
	    
	feign:
	  hystrix:
	    enabled: true
	    
Feign+Hystrix.run:
	@SpringBootApplication
	@EnableEurekaClient
	@EnableDiscoveryClient
	@EnableFeignClients

View.pom:
	<dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
 
    </dependencies>
    
View.application:
	server:
	  port: XXXX
	  
	spring:
	  application:
	    name: XXXX
	  thymeleaf:
	    mode: LEGACYHTML5
	    encoding: UTF-8
	    content-type: text/html
	    cache: false
	 
	eureka:
	  client:
	    serviceUrl:
	      defaultZone: http://127.0.0.1:8761/eureka/
	     
View.run:
	@SpringBootApplication
	@EnableEurekaClient
	
Redis.pom:
	<dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
 
    </dependencies>
    
Redis.application:
	server:
		port: XXXX
		
	eureka:
	  client:
	    serviceUrl:
	      defaultZone: http://127.0.0.1:8761/eureka/
	      
	spring:
	  application:
	    name: XXXX

Redis.run:
	@SpringBootApplication
	@EnableEurekaClient
	@EnableCaching
	
	
		


	